{"doctype":"markdown","bookId":"trash","createdAt":1665373801026,"updatedAt":1665374192414,"status":"none","share":"private","numOfTasks":0,"numOfCheckedTasks":0,"title":"","body":"# Discussion 6-3\n## C++ Strengths:\n\nC++ is widely used in many industries for longer than the other languages. It is powerful and fast because it gives lower level control of the resources. You can manage memory more directly. It's object oriented and so you can take advantage of OOP concepts like inheritance which is good for code maintenance. \n\n## C++ Weaknesses:\n\nThe syntax is strict and unforgiving. You must be careful or you will get cryptic error messages when you try to compile. I also find that because it is lower level, there is more detail to pay attention to. It is the trade off for being fast. Normally has no garbage collection. \n\n## Python Strengths:\n\nPython is a very readable and compact language. It uses indentation to organize the code rather than semicolons or braces like C++. It is easier to learn because it's a higher level language. Also it is very popular and has many open source libraries that you can use to solve just about any problem. \n\n## Python Weaknesses:\n\nIt is an interpreted language, not compiled, so it will never be as fast as C++ or Java. It is not good for applications that demand speed such as banking, gaming, precision mechanical control, etc. \n\n## Java Strengths:\n\nJava is widely used and is a little easier than C++ because it handles pointers for you. It is also object oriented. It has garbage collection to prevent memory leaks. \n\n## Java Weaknesses:\n\nJava uses more memory than C++. Everything must be implemented in a class. Some people might call that an advantage to stay organized, but it might be a limitation in some cases. \n\n## Security:\n\nI would probably select Java for best security, although with attention to detail, you could likely use many languages. Java is widely used in commercial software so its security has been well tested. Python would be too slow and C++ would be easy to unintentionally create a bug that could be exploited due to code complexity. \n\n## Data Analysis:\n\nPython is the language used commonly for data analysis because of the simple syntax and abundance of analysis libraries. It is popular for data science and data professions. However, I can imagine cases where C++ may be preferable to Python if the analysis is lengthy but needs to run quickly. It may be a case where Python is good for prototyping, but C++ needs to be used for released products. \n\n## Gaming:\nWould not choose Python. Might choose Java for simplicity, but likely would use C++ to have the best speed and performance which is very important for gaming. \n\n# Response\n> Hello Chris,\n> \n> Thank you for your infomrative post! To be honest, I'm pretty sure i missunderstood the discussion because i thought we were only referencing C++ and Python. You brought up some very good points, but ultimate I think the \"best language for the category(if you will) depends on who's doing the programming. I personally would use C++ for data analysis, but thats because i enjoy the chaos. Based on your explanations and justifications though i will say, i know now which i should look into depending on where i end up in my adventure. Have a good week!","tags":[],"_id":"note:OSJQg1PBa","_rev":"4-f012f058907e7d6b1284cb91493fdb8f"}